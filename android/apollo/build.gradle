plugins {
    id 'org.jetbrains.kotlin.plugin.serialization'
    id 'org.jetbrains.kotlin.android'
}

repositories {
    flatDir {
        dirs "${project.projectDir}/libs"
    }
}

apply plugin: 'com.android.library'
apply plugin: 'com.squareup.sqldelight'

apply from: "${project.rootDir}/linters/checkstyle/check-android.gradle"
apply from: "${project.rootDir}/linters/pmd/check-android.gradle"

// spotbugs is kinda broken for android projects
// it doesnt recognize what it has to check from android settings and needs a lot of hacking to work
// https://github.com/spotbugs/spotbugs-gradle-plugin/issues/90
//apply from: "${project.rootDir}/linters/findbugs/check-android.gradle"

android {
    namespace "io.muun.apollo.lib"

    compileSdk 34

    defaultConfig {
        minSdk 19
        targetSdk 34

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        minified {
            minifyEnabled true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    lint {
        abortOnError true
        htmlReport true
        textReport true
        lintConfig file("$rootDir/linters/android-lint/config.xml")
        baseline file('lint-baseline.xml')
    }

    testOptions {
        // https://www.veskoiliev.com/running-android-unit-instrumentation-tests-from-the-console/
        unitTests.all {
            testLogging {
                outputs.upToDateWhen {false}
                events "passed", "failed", "standardError"
                showCauses true
                showExceptions true
            }
        }
    }
}

ext {
    // TODO this currently needs to match common's retrofit version. We should refactor to avoid
    // this discipline on our part. We probably need to extract it to a constant in top-level gradle
    version_retrofit = '2.5.0'
    version_workmanager = '2.9.0'   // Next version upgrade requires bump minSdk to 21
    version_mockk = '1.13.7'        // Latest version targeting kotlin 1.8.20
}


dependencies {
    api project(':common')
    // We do compileOnly to workaround a limitation regarding multi module builds with local deps
    // https://stackoverflow.com/a/63665094/550
    compileOnly project(':android:libwallet')

    // Android support:
    api 'androidx.appcompat:appcompat:1.4.2'

    implementation 'androidx.sqlite:sqlite-framework:2.0.1'

    // ReactiveX:
    api 'io.reactivex:rxjava:1.3.0'
    api 'io.reactivex:rxandroid:1.2.1'
    implementation 'com.github.akarnokd:rxjava2-interop:0.13.7'

    // Dependency injection:
    api "com.google.dagger:dagger:$global_version_dagger"
    annotationProcessor "com.google.dagger:dagger-compiler:$global_version_dagger"

    compileOnly 'org.glassfish:javax.annotation:10.0-b28'

    // Logging:
    api 'com.jakewharton.timber:timber:4.5.1'

    // Money:
    api 'org.javamoney:moneta-bp:1.0'
    api 'org.zalando:jackson-datatype-money:0.12.0'

    // Firebase:
    // Import the Firebase BoM
    api platform('com.google.firebase:firebase-bom:32.6.0')
    // When using the BoM, you don't specify versions in Firebase library dependencies

    // Push Notifications:
    api 'com.google.firebase:firebase-messaging'
    // Debugging:
    api 'com.google.firebase:firebase-crashlytics'
    // Analytics: Enhance Crashlytics experience (real time crash-free users + breadcrumbs)
    api 'com.google.firebase:firebase-analytics'


    // WorkManager: (see https://github.com/muun/muun/issues/5895)
    // Guide: https://developer.android.com/topic/libraries/architecture/workmanager/migrating-fb
    api "androidx.work:work-runtime:$version_workmanager" // api as needs to be init at app.OnCreate

    // Storage:
    implementation 'com.squareup.sqlbrite3:sqlbrite:3.2.0'
    implementation "com.squareup.sqldelight:android-driver:1.5.5"
    implementation "com.squareup.sqldelight:rxjava2-extensions:1.5.5"

    // Networking:
    implementation "com.squareup.retrofit2:retrofit:$version_retrofit"
    implementation "com.squareup.retrofit2:converter-jackson:$version_retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava:$version_retrofit"
    implementation "com.squareup.retrofit2:converter-scalars:$version_retrofit"
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'

    // Google APIs
    implementation 'com.google.android.gms:play-services-auth:20.6.0'
    implementation 'com.google.api-client:google-api-client-android:1.26.0'
    implementation 'com.google.apis:google-api-services-drive:v3-rev136-1.25.0'
    implementation 'com.google.http-client:google-http-client-gson:1.26.0'

    // Kotlin:
    // Kotlin serialization runtime library. Note that while the plugin has version the same as
    // the compiler one, runtime library has different coordinates, repository and versioning.
    api "org.jetbrains.kotlinx:kotlinx-serialization-json:1.2.1"

    // Detect root devices (for error reports metadata and fraud control)
    implementation 'com.scottyab:rootbeer-lib:0.1.0'

    // Google Play Integrity
    implementation('com.google.android.play:integrity:1.1.0')

    // Testing:
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    testImplementation 'org.mockito:mockito-core:2.8.47'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0"
    testImplementation 'org.assertj:assertj-core:3.8.0'
    testImplementation 'junit:junit:4.12'
    testImplementation "io.mockk:mockk:$version_mockk"

    // Can't use Jake Wharton's threeten lib for test. For more info see:
    // https://github.com/JakeWharton/ThreeTenABP/issues/47
    testImplementation 'org.threeten:threetenbp:1.6.8'
    testImplementation 'br.com.six2six:fixture-factory:3.1.0'
    testImplementation 'net.sourceforge.streamsupport:streamsupport:1.5.5'
    testImplementation 'com.github.tomakehurst:wiremock-standalone:2.6.0'

    testImplementation project(':android:libwallet')
}
